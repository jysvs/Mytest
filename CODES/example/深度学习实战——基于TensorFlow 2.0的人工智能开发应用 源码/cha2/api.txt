'''引入Flask，request和jsonify
Flask:flask框架的应用类
request:flask框架中获取参数的对象
jsonify:flask框架数据转JSON格式的对象
'''
from flask import Flask, request, jsonify

# Flask类实例化
app = Flask(__name__)
# 路由：即RESTful中的URI，用于定位服务器资源
# /post/data URI可接受GET和POST请求，本次测试使用POST方法
@app.route("/data/test", methods=["POST", "GET"])
def getDataFromJson():
    try:
        # 若当前请求方法为POST方法，获取POST请求体中携带的JSON参数，否则抛出错误提示
        if request.method == "POST":
            # 获取请求体的JSON参数name
            name  = request.json["name"]
            # 获取请求体的JSON参数address
            address = request.json["address"]
            return jsonify({"code":200,"infos":{"name":name, "address":address}})
        else:
            return jsonify({"code":400, "infos":"调用方法错误，请使用POST方法"})
    except BaseException:
        # 若请求体中的参数错误，抛出错误提示
        return jsonify({"code":400, "infos":"参数错误，请检查"})
    else:
        return jsonify({"code":400, "infos":"参数错误，请检查"})

if __name__ == "__main__":
    '''运行Flask web服务
    host:服务端host配置，设置为0.0.0.0表示允许所有客户端连接
	port:设置服务端的开放端口
	debug:设置程序热更新，即更新代码后，服务即时更新
    '''
    app.run(host="0.0.0.0", port=8090, debug=True)
